SET(TestIncludeFiles test.hpp)

ADD_EXECUTABLE(testFor testFor.cpp ${TestIncludeFiles})
ADD_EXECUTABLE(testIf testIf.cpp ${TestIncludeFiles})
ADD_EXECUTABLE(testIfElse testIfElse.cpp ${TestIncludeFiles})
ADD_EXECUTABLE(testReadOnly testReadOnly.cpp ${TestIncludeFiles})
ADD_EXECUTABLE(testTypeMismatch testTypeMismatch.cpp ${TestIncludeFiles})
ADD_EXECUTABLE(testUnary testUnary.cpp ${TestIncludeFiles})
ADD_EXECUTABLE(testUninitialized testUninitialized.cpp ${TestIncludeFiles})
ADD_EXECUTABLE(testWhile testWhile.cpp ${TestIncludeFiles})

TARGET_LINK_LIBRARIES(testFor CmLib)
TARGET_LINK_LIBRARIES(testIf CmLib)
TARGET_LINK_LIBRARIES(testIfElse CmLib)
TARGET_LINK_LIBRARIES(testReadOnly CmLib)
TARGET_LINK_LIBRARIES(testTypeMismatch CmLib)
TARGET_LINK_LIBRARIES(testUnary CmLib)
TARGET_LINK_LIBRARIES(testUninitialized CmLib)
TARGET_LINK_LIBRARIES(testWhile CmLib)

ADD_TEST(NAME testFor COMMAND testFor COMMENT "Running testFor")
ADD_TEST(NAME testIf COMMAND testIf COMMENT "Running testIf")
ADD_TEST(NAME testIfElse COMMAND testIfElse COMMENT "Running testIfElse")
ADD_TEST(NAME testReadOnly COMMAND testReadOnly COMMENT "Running testReadOnly")
ADD_TEST(NAME testTypeMismatch COMMAND testTypeMismatch COMMENT "Running testTypeMismatch")
ADD_TEST(NAME testUnary COMMAND testUnary COMMENT "Running testUnary")
ADD_TEST(NAME testUninitialized COMMAND testUninitialized COMMENT "Running testUninitialized")
ADD_TEST(NAME testWhile COMMAND testWhile COMMENT "Running testWhile")